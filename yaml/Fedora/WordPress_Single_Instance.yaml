HeatTemplateFormatVersion: '2012-12-12'

Description: 'NeCTAR Sample Template WordPress_Single_Instance:
  WordPress is web software you can use to create a beautiful website or blog. This
  template installs a single-instance WordPress deployment using a local MySQL database
  to store the data.
  It is a customization for the NeCTAR environment of the sample template that ships with HEAT'

Parameters:
  # First off, the parameters that affect the environment
  KeyName: {Description: Name of an existing KeyPair
      to enable SSH access to the instances, Type: String}
  InstanceType:
    Description: The NeCTAR flavour the webserver is to run on
    Type: String
    Default: m1.small
    AllowedValues: [m1.small, m1.medium, m1.large, m1.xlarge, m1.xxlarge]
    ConstraintDescription: must be a valid NeCTAR flavour.
  AvailabilityZone:
    Description: The NeCTAR zone in which the VM is to run
    Default: melbourne
    Type: String
    AllowedValues: [melbourne, monash, qld, sa]
  # Then the installation specific parameters
  DBName: {Default: wordpress, Description: The
      WordPress database name, Type: String, MinLength: '1',
    MaxLength: '64', AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*',
    ConstraintDescription: must begin with a letter and contain only
      alphanumeric characters.}
  DBUsername: {Default: stackadmin, NoEcho: 'true',
    Description: The WordPress database admin account username, Type: String,
    MinLength: '1', MaxLength: '16', AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*',
    ConstraintDescription: must begin with a letter and contain only
      alphanumeric characters.}
  DBPassword: {NoEcho: 'true',
    Description: The WordPress database admin account password (must be > 6 chars long), Type: String,
    MinLength: '6', MaxLength: '41', AllowedPattern: '[a-zA-Z0-9]*',
    ConstraintDescription: must be at least 6 characters long and contain only alphanumeric characters.}
  DBRootPassword: {NoEcho: 'true',
    Description: Root password for MySQL (must be > 6 chars long), Type: String,
    MinLength: '6', MaxLength: '41', AllowedPattern: '[a-zA-Z0-9]*',
    ConstraintDescription: must be at least 6 characters long contain only alphanumeric characters.}

Resources:
  # Creating a security group is possible: but it does eat into the number of groups that you are limited to (10)
  WikiDatabaseSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable HTTP access via port 80 plus SSH access"
      SecurityGroupIngress:
        -
          IpProtocol: "icmp"
          FromPort: "-1"
          ToPort: "-1"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
  WikiDatabase:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              mariadb: []
              mariadb-server: []
              httpd: []
              wordpress: []
          services:
            systemd:
              mysqld: {enabled: 'true', ensureRunning: 'true'}
              httpd: {enabled: 'true', ensureRunning: 'true'}
    Properties:
      # a fedora image with heat-cfntools installed
      ImageId: b7833395-2ab9-429c-bcf9-100d0e4754ed
      InstanceType: {Ref: InstanceType}
      KeyName: {Ref: KeyName}
      AvailabilityZone: {Ref: AvailabilityZone}
      # the following will break if you have maxed out your security group limit (10).
      SecurityGroups: [{Ref: WikiDatabaseSecurityGroup}]
      # the following is written to /var/lib/cloud/data/cfn-userdata
      # note the call to cfn-init which causes the AWS::CloudFomration::Init to be actioned
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -v\n"
            - "/usr/bin/cfn-init\n"
            - "# Setup MySQL root password and create a user\n"
            - "mysqladmin -u root password '"
            - {Ref: DBRootPassword}
            - "'\n"
            - "cat << EOF | mysql -u root --password='"
            - {Ref: DBRootPassword}
            - "'\n"
            - "CREATE DATABASE "
            - {Ref: DBName}
            - ";\n"
            - "GRANT ALL PRIVILEGES ON "
            - {Ref: DBName}
            - ".* TO \""
            - {Ref: DBUsername}
            - "\"@\"localhost\""
            - "IDENTIFIED BY \""
            - {Ref: DBPassword}
            - "\";\n"
            - "FLUSH PRIVILEGES;\n"
            - "EXIT\n"
            - "EOF\n"
            - "sed -i \"/Deny from All/d\" /etc/httpd/conf.d/wordpress.conf\n"
            - "sed -i \"s/Require local/Require all granted/\" /etc/httpd/conf.d/wordpress.conf\n"
            - "sed --in-place --e s/database_name_here/"
            - {Ref: DBName}
            - "/ --e s/username_here/"
            - {Ref: DBUsername}
            - "/ --e s/password_here/"
            - {Ref: DBPassword}
            - "/ /usr/share/wordpress/wp-config.php\n"
            - "systemctl restart httpd.service\n"

Outputs:
  WebsiteURL:
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt: [WikiDatabase, PublicIp]
        - /wordpress
    Description: URL for Wordpress wiki

