# NB Still under development!!! Does not YET work PROPERLY!
HeatTemplateFormatVersion: '2012-12-12'

Description: >
  This template installs two instances: one running a WordPress deployment and the other using a local
  MariaDb database to store the data. The MariaDb database instance used block storage.
  It is a customization for the NeCTAR environment of the template named WordPress_2_Instances_With_EBS_EIP.template
  in the OpenStack heat template repository.

Parameters:
   # First off, the parameters that affect the environment
  KeyName: {Description: Name of an existing KeyPair
      to enable SSH access to the instances, Type: String}
  InstanceType:
    Description: The NeCTAR flavour the webserver is to run on
    Type: String
    Default: m1.small
    AllowedValues: [m1.small, m1.medium, m1.large, m1.xlarge, m1.xxlarge]
    ConstraintDescription: Must be a valid NeCTAR flavour.
  VolumeSize:
    Type: Number
    Description: Size of the volume for the Wiki database to be created.
    Default: 1
    Constraints:
      - Range: { Min: 1, Max: 1024 }
        Description: must be between 1 and 1024 Gb.
  AvailabilityZone:
    Type: String
    Tescription: The NeCTAR zone in which the VM is to run (must have block storage)
    Default: melbourne-qh2
    AllowedValues: [melbourne-qh2, melbourne-np, monash, qld]
  # Then the installation specific parameters
  DBName:
    Default: "wordpress"
    Description: "The WordPress database name"
    Type: "String"
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: "must begin with a letter and contain only alphanumeric characters."
  DBUsername:
    Default: "admin"
    NoEcho: "true"
    Description: "The WordPress database admin account username"
    Type: "String"
    MinLength: "1"
    MaxLength: "16"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: "must begin with a letter and contain only alphanumeric characters."
  DBPassword:
    Default: "admin"
    NoEcho: "true"
    Description: "The WordPress database admin account password"
    Type: "String"
    MinLength: "1"
    MaxLength: "41"
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: "must contain only alphanumeric characters."
  DBRootPassword:
    Default: "admin"
    NoEcho: "true"
    Description: "Root password for MySQL"
    Type: "String"
    MinLength: "1"
    MaxLength: "41"
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: "must contain only alphanumeric characters."

Resources:
  # Creating a security group is possible: but it does eat into the number of groups that you are limited to (10)
  # When you delete the stack, the security group is deleted as well. Unless an image outside of the stack
  # is making use of it - in which case, the stack won't delete properly.
  WikiDatabaseSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable HTTP access via port 80 plus SSH access"
      SecurityGroupIngress:
        -
          IpProtocol: "icmp"
          FromPort: "-1"
          ToPort: "-1"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "3306"
          ToPort: "3306"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
  WikiDatabase:
    Type: "AWS::EC2::Instance"
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              mariadb: []
              mariadb-server: []
          services:
            systemd:
              mysqld:
                enabled: "true"
                ensureRunning: "true"
    Properties:
      # the following is currently the only fedora image with heat-cfntools installed
      ImageId: b7833395-2ab9-429c-bcf9-100d0e4754ed
      InstanceType:
        Ref: "InstanceType"
      KeyName:
        Ref: "KeyName"
      AvailabilityZone: {Ref: AvailabilityZone}
      SecurityGroups:
        -
          Ref: "WikiDatabaseSecurityGroup"
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            -
              - "#!/bin/bash -v\n"
              - "/usr/bin/cfn-init\n"
              - "# Wait for the volume to appear\n"
              - "while [ ! -e /dev/vdc ]; do echo Waiting for volume to attach; sleep 1; done\n"
              - "parted -s /dev/vdc mklabel msdos\n"
              - "parted -s /dev/vdc mkpart primary ext3 1 1000\n"
              - "# Format the EBS volume and mount it\n"
              - "systemctl stop mysqld.service\n"
              - "sleep 1\n"
              - "mv /var/lib/mysql /var/lib/mysql.data\n"
              - "/sbin/mkfs -t ext3 /dev/vdc1\n"
              - "mkdir /var/lib/mysql\n"
              - "mount /dev/vdc1 /var/lib/mysql\n"
              - "chown mysql.mysql /var/lib/mysql\n"
              - "mv -n /var/lib/mysql.data/* /var/lib/mysql\n"
              - "systemctl start mysqld.service\n"
              - "sleep 1\n"
              - "# Setup MySQL root password and create a user\n"
              - "mysqladmin -u root password '"
              -
                Ref: "DBRootPassword"
              - "'\n"
              - "cat << EOF | mysql -u root --password='"
              -
                Ref: "DBRootPassword"
              - "'\n"
              - "CREATE DATABASE "
              -
                Ref: "DBName"
              - ";\n"
              - "GRANT ALL PRIVILEGES ON "
              -
                Ref: "DBName"
              - ".* TO \""
              -
                Ref: "DBUsername"
              - "\"@\"%\"\n"
              - "IDENTIFIED BY \""
              -
                Ref: "DBPassword"
              - "\";\n"
              - "FLUSH PRIVILEGES;\n"
              - "EXIT\n"
              - "EOF\n"
  DataVolume:
    Type: "AWS::EC2::Volume"
    Properties:
      Size:
        Ref: "VolumeSize"
      AvailabilityZone:
        Fn::GetAtt:
          - "WikiDatabase"
          - "AvailabilityZone"
      Tags:
        -
          Key: "Usage"
          Value: "Wiki Data Volume"
  WebServer:
    Type: "AWS::EC2::Instance"
    # The following forces the creation of this resource to wait until the WikiDatabas is completed.
    DependsOn: "WikiDatabase"
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
              wordpress: []
          services:
            systemd:
              httpd:
                enabled: "true"
                ensureRunning: "true"
    Properties:
      # a fedora image with heat-cfntools installed
      ImageId: b7833395-2ab9-429c-bcf9-100d0e4754ed
      InstanceType:
        Ref: "InstanceType"
      KeyName:
        Ref: "KeyName"
      AvailabilityZone: {Ref: AvailabilityZone}
      # the following are project specific, and will have to be adjusted.
      SecurityGroups: [default, webserver]
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            -
              - "#!/bin/bash -v\n"
              - "/usr/bin/cfn-init\n"
              - "sed -i \"/Deny from All/d\" /etc/httpd/conf.d/wordpress.conf\n"
              - "sed -i \"s/Require local/Require all granted/\" /etc/httpd/conf.d/wordpress.conf\n"
              - "sed --in-place --e s/database_name_here/"
              -
                Ref: "DBName"
              - "/ --e s/username_here/"
              -
                Ref: "DBUsername"
              - "/ --e s/password_here/"
              -
                Ref: "DBPassword"
              - "/ --e s/localhost/"
              -
                Fn::GetAtt:
                  - "WikiDatabase"
                  - "PublicIp"
              - "/ /usr/share/wordpress/wp-config.php\n"
              - "systemctl restart httpd.service\n"
  MountPoint:
    Type: "AWS::EC2::VolumeAttachment"
    Properties:
      InstanceId:
        Ref: "WikiDatabase"
      VolumeId:
        Ref: "DataVolume"
      Device: "/dev/vdc"
Outputs:
  WebsiteURL:
    Value:
      Fn::Join:
        - ""
        -
          - "http://"
          -
            Fn::GetAtt:
              - "WebServer"
              - "PublicIp"
          - "/wordpress"
    Description: "URL for Wordpress wiki"
