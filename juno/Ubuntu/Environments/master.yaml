# http://docs.openstack.org/developer/heat/template_guide/hot_spec.html#heat-template-version
heat_template_version: 2014-10-16

# A template to demonstrate enviroments in action.
# Based on the article:
#       https://developer.rackspace.com/blog/openstack-orchestration-in-depth-part-3-multi-instance-deployments/


description: >
  This template sets up a wordpress install on two servers, but does so by using two templates referenced by the
  environment fil. The first template will have Apache installed on it, the second will have Wordpress installed on it.


parameters:

  image_name:
    label: Image name
    type: string
    description: Name of the image to use for the instance to be created.
    default: 'Ubuntu 14.04'
    constraints:
      - allowed_values: [ 'Ubuntu 14.04', 'Ubuntu 15.04' ]
        description:
          Must be a valid NeCTAR image name, limited to the LTS Ubuntu releases

  instance_type:
    label: NeCTAR flavour
    type: string
    description: The NeCTAR flavour the webserver is to run on
    default: m2.xsmall
    constraints:
      - allowed_values: [m2.xsmall, m2.small]
        description:
          Must be a valid NeCTAR flavour, limited to the smaller ones available

  key_name:
    label: Keypair name
    type: string
    description: Name of an existing KeyPair to enable SSH access to the instances


resources:

  mysql:
    # Our type is another template, referenced in the environment file.
    type: Lib::MSG::MySQL
    properties:
      # The properties are all parameters on the mysql template
      image:
        Fn::Select:
          - { get_param: image_name }
          -
            'Ubuntu 14.04': 2a882d9c-3185-414c-9683-a4646b5c785e
            'Ubuntu 15.04': 2ae1042a-8f8d-4f40-95c7-6d1e611714be
      flavor: { get_param: instance_type }
      key: { get_param: key_name }
      database_name: wordpress
      database_user: wordpress_user

  wordpress:
    # Our type is another template, referenced in the environment file.
    type: Lib::MSG::Wordpress
    properties:
      image:
        Fn::Select:
          - { get_param: image_name }
          -
            'Ubuntu 14.04': 2a882d9c-3185-414c-9683-a4646b5c785e
            'Ubuntu 15.04': 2ae1042a-8f8d-4f40-95c7-6d1e611714be
      flavor: { get_param: instance_type }
      key: { get_param: key_name }
      # The ip attribute is read from the mysql template's output
      mysql_server: { get_attr: [mysql, ip] }
      database_name: wordpress
      database_user: wordpress_user
      database_password: { get_attr: [mysql, database_password] }

outputs:

  ip_mysql:
    # This output is in turn read from the mysql template's output
    description: The IP address of the MySQL instance.
    value: { get_attr: [mysql, ip] }

  ip_wordpress:
    # This output is in turn read from the wordpress template's output
    description: The IP address of the wordpress instance.
    value: { get_attr: [wordpress, ip] }