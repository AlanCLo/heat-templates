# http://docs.openstack.org/developer/heat/template_guide/hot_spec.html#heat-template-version
heat_template_version: 2014-10-16


description: >
  A NeCTAR sample template that installs Apache on a single Ubuntu instance using the AWS::EC2::Instance resource
  type.


parameters:

  key_name:
    type: string
    description: Name of an existing KeyPair to enable SSH access to the instances

  instance_type:
    type: string
    description: The NeCTAR flavour the webserver is to run on
    default: m2.xsmall
    constraints:
      - allowed_values: [m2.xsmall, m2.small]
        description:
          Must be a valid NeCTAR flavour, limited to the smaller ones available

  image_name:
    type: string
    description: Name of the image to use for the instance to be created.
    default: 'Ubuntu 14.04'
    constraints:
      - allowed_values: [ 'Ubuntu 14.04', 'Ubuntu 12.04' ]
        description:
          Must be a valid NeCTAR image name, limited to the LTS Ubuntu releases


resources:

  web_security_group:
    # Use this when we do not have Neutron networking.
    # http://docs.openstack.org/developer/heat/template_guide/cfn.html#AWS::EC2::SecurityGroup
    type: AWS::EC2::SecurityGroup
    properties:
      GroupDescription: Web server access rules.
      SecurityGroupIngress:
        - { IpProtocol: icmp, FromPort: '-1', ToPort: '-1', CidrIp : 0.0.0.0/0 }
        - { IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0 }
        - { IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0 }
        - { IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0 }

  apache_server:
    # http://docs.openstack.org/developer/heat/template_guide/cfn.html#AWS::EC2::Instance
    type: AWS::EC2::Instance
    # A deletion policy of Retain will leave this instance behind when this template is torn down.
    # deletion_policy: Retain
    metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            apt:
              apache2: []
          services:
            systemd:
              apache2: {enabled: 'true', ensureRunning: 'true'}
    properties:
      ImageId:
        Fn::Select:
          - { get_param: image_name }
          -
            'Ubuntu 12.04': c395c528-fb43-4066-9536-cf5c5efe806d
            'Ubuntu 14.04': eeedf697-5a41-4d91-a478-01bb21e32cbe
      InstanceType: { get_param: instance_type }
      KeyName: { get_param: key_name }
      SecurityGroups: [ get_resource: web_security_group ]
      # the following is written to /var/lib/cloud/data/cfn-userdata
      # note the call to cfn-init which causes the AWS::CloudFomration::Init to be actioned
      UserData: |
        #!/bin/bash -v
        apt-get update
        apt-get -y upgrade
        /usr/bin/cfn-init


outputs:

  instance_ip:
    description: The IP address of the deployed instance
    value: { get_attr: [apache_server, PublicIp] }

  website_url:
    description: URL for Apache server
    value:
      list_join: ['', ['http://', get_attr: [apache_server, PublicIp]]]

  ssh_command:
    description: SSH command for the newly created instance (assuming your key is in ~./ssh/).
    value:
      str_replace:
        template: ssh ec2-user@host -i ~/.ssh/key.pem
        params:
          host: { get_attr: [apache_server, PublicIp] }
          key: { get_param: key_name }