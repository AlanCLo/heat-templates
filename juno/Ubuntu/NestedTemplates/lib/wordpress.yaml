# http://docs.openstack.org/developer/heat/template_guide/hot_spec.html#heat-template-version
heat_template_version: 2014-10-16


description: Template that installs a wordpress server.


parameters:

  image:
    type: string
    description: The Ubuntu image to use.

  flavor:
    type: string
    description: The NeCTAR flavour the webserver is to run on

  key:
    type: string
    description: Name of an existing KeyPair to enable SSH access to the instances

  mysql_server:
    type: string
    description: The IP address of the database server.

  database_name:
    type: string
    description: Name of the application database.

  database_user:
    type: string
    description: The database user name.

  database_password:
    type: string
    hidden: true
    description: The dabase password.


resources:
  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 1
      timeout: 600

  wait_handle:
    type: OS::Heat::WaitConditionHandle

  security_group:
    type: AWS::EC2::SecurityGroup
    properties:
      GroupDescription: Web server access rules.
      SecurityGroupIngress:
        - {IpProtocol: icmp, FromPort: '-1', ToPort: '-1', CidrIp : 0.0.0.0/0}
        - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}
        - {IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0}
        - {IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0}

  wordpress_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      security_groups:
        - { get_resource: security_group }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __mysql_ip__: { get_param: mysql_server }
            __database_name__: { get_param: database_name }
            __database_user__: { get_param: database_user }
            __database_password__: { get_param: database_password }
            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash -ex

            # install dependencies
            apt-get update
            apt-get -y install apache2 php5 libapache2-mod-php5 php5-mysql php5-gd mysql-client

            # download wordpress
            wget http://wordpress.org/latest.tar.gz
            tar -xzf latest.tar.gz

            # configure wordpress
            cp wordpress/wp-config-sample.php wordpress/wp-config.php
            sed -i 's/database_name_here/__database_name__/' wordpress/wp-config.php
            sed -i 's/username_here/__database_user__/' wordpress/wp-config.php
            sed -i 's/password_here/__database_password__/' wordpress/wp-config.php
            sed -i 's/localhost/__mysql_ip__/' wordpress/wp-config.php

            # install a copy of the configured wordpress into apache's www directory
            rm /var/www/html/index.html
            cp -R wordpress/* /var/www/html/

            # give apache ownership of the application files
            chown -R www-data:www-data /var/www/html/
            chmod -R g+w /var/www/html/

            # notify heat that we are done here
            wc_notify --data-binary '{"status": "SUCCESS"}'


outputs:

  ip:
    description: The IP address of the wordpress instance.
    value: { get_attr: [wordpress_instance, first_address] }
