# http://docs.openstack.org/developer/heat/template_guide/hot_spec.html#heat-template-version
heat_template_version: 2014-10-16


description: >
  This template simply builds a mysql server out of an Ubuntu image.
  Note it is also used by the environment sample project


parameters:

  image:
    type: string
    description: The Ubuntu image to use.

  flavor:
    type: string
    description: The NeCTAR flavour the webserver is to run on

  key:
    type: string
    description: Name of an existing KeyPair to enable SSH access to the instances

  database_name:
    type: string
    description: Name of the application database.

  database_user:
    type: string
    description: Name of the database user.


resources:

  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      count: 1
      timeout: 600

  wait_handle:
    type: OS::Heat::WaitConditionHandle

  mysql_root_password:
    type: OS::Heat::RandomString
    properties:
      length: 32
      sequence: lettersdigits

  database_password:
    type: OS::Heat::RandomString
    properties:
      length: 32
      sequence: lettersdigits

  security_group:
    type: AWS::EC2::SecurityGroup
    properties:
      GroupDescription: Web server access rules.
      SecurityGroupIngress:
        - {IpProtocol: icmp, FromPort: '-1', ToPort: '-1', CidrIp : 0.0.0.0/0}
        - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}
        - {IpProtocol: tcp, FromPort: '3306', ToPort: '3306', CidrIp: 0.0.0.0/0}

  mysql_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      security_groups:
        - { get_resource: security_group }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __mysql_root_password__: { get_attr: [mysql_root_password, value] }
            __database_name__: { get_param: database_name }
            __database_user__: { get_param: database_user }
            __database_password__: { get_attr: [database_password, value] }
            wc_notify: { get_attr: ['wait_handle', 'curl_cli'] }
          template: |
            #!/bin/bash

            # install MySQL
            apt-get update
            export DEBIAN_FRONTEND=noninteractive
            apt-get install -y mysql-server

            # configure MySQL root password
            mysqladmin -u root password "__mysql_root_password__"

            # listen on all network interfaces
            sed -i "s/bind-address.*/bind-address = 0.0.0.0/" /etc/mysql/my.cnf

            # restart service
            service mysql restart

            # create wordpress database
            mysql -u root --password="__mysql_root_password__" <<EOF
            CREATE DATABASE __database_name__;
            CREATE USER '__database_user__'@'localhost';
            SET PASSWORD FOR '__database_user__'@'localhost'=PASSWORD("__database_password__");
            GRANT ALL PRIVILEGES ON __database_name__.* TO '__database_user__'@'localhost' IDENTIFIED BY '__database_password__';
            CREATE USER '__database_user__'@'%';
            SET PASSWORD FOR '__database_user__'@'%'=PASSWORD("__database_password__");
            GRANT ALL PRIVILEGES ON __database_name__.* TO '__database_user__'@'%' IDENTIFIED BY '__database_password__';
            FLUSH PRIVILEGES;
            EOF

            # notify heat that we are done here
            wc_notify --data-binary '{"status": "SUCCESS"}'


outputs:

  ip:
    description: The IP address of the MySQL server.
    value: { get_attr: [mysql_instance, first_address] }

  database_password:
    description: The MySQL password.
    value: { get_attr: [database_password, value] }
