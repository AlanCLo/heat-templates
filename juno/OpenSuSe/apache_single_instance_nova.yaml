# http://docs.openstack.org/developer/heat/template_guide/hot_spec.html#heat-template-version
heat_template_version: 2014-10-16

# This script only works with images that have the full Heat software installed on them...
# None of the Nectar images do at the moment :(

description: Install Apache on a single OpenSuse instance using the OS::Nova::Server resource type.


parameters:

  key_name:
    type: string
    label: Key Name
    description: Name of an existing KeyPair to enable SSH access to the instances. 
    
  image_id:
    type: string
    label: Image ID
    description: Image id of OpenSuSE to be used for compute instance
    default:     18bdc583-ef84-4a30-81d5-c96311f092be

  instance_type:
    type: string
    description: The NeCTAR flavour the webserver is to run on
    default: m2.xsmall
    constraints:
      - allowed_values: [m2.xsmall, m2.small, m1.small]
        description:
          Must be a valid NeCTAR flavour, limited to the smaller ones available


resources:
    
  # Use this when we do not have Neutron networking.
  # http://docs.openstack.org/developer/heat/template_guide/cfn.html#AWS::EC2::SecurityGroup
  web_security_group:
    type: AWS::EC2::SecurityGroup
    properties:
      GroupDescription: Web server access rules.
      SecurityGroupIngress:
        - {IpProtocol: icmp, FromPort: '-1', ToPort: '-1', CidrIp : 0.0.0.0/0}
        - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}
        - {IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0}
        - {IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0}

  apache_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        zypper in apache2
        rcapache2 start

  apache_server:
    # http://docs.openstack.org/developer/heat/template_guide/openstack.html#OS::Nova::Server
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      security_groups:
        - { get_resource: web_security_group }
      user_data_format: SOFTWARE_CONFIG

  apache_deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: apache_config
      server:
        get_resource: apache_server

  wait_handle:
    # http://docs.openstack.org/developer/heat/template_guide/openstack.html#OS::Heat::WaitConditionHandle
    type: OS::Heat::WaitConditionHandle

  wait_condition:
    # http://docs.openstack.org/developer/heat/template_guide/openstack.html#OS::Heat::WaitCondition
    type: OS::Heat::WaitCondition
    depends_on: apache_server
    properties:
      handle: { get_resource: wait_handle }
      count: 1
      # we'll give it 10 minutes
      timeout: 600

outputs:

  instance_ip:
    description: The IP address of the deployed instance
    value: { get_attr: [apache_server, first_address] }

  website_url:
    description: URL for Apache server
    value:
      list_join: ['', ['http://', get_attr: [apache_server, first_address]]]
        